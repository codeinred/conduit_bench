name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{matrix.name}}
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        name: [ubuntu-latest-clang-10-release]
        
        include:
          - name: ubuntu-latest-clang-10-release
            os: ubuntu-latest
            compiler: $HOME/clang+llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04/bin/clang++
            flags: "-stdlib=libc++"
            build_type: Release
            install_compiler: "cd $HOME \
              && wget https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/clang+llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz
              && tar -xvf clang+llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz"
    steps:
    - uses: actions/checkout@v2
      with: 
        submodules: true
    
    - name: Install Compiler
      run: ${{matrix.install_compiler}}

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: "cmake $GITHUB_WORKSPACE \
        -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
        -DCMAKE_CXX_COMPILER=${{matrix.compiler}} \
        -DCMAKE_CXX_FLAGS=${{matrix.flags}} \
        -DBENCHMARK_ENABLE_GTEST_TESTS=OFF"

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config ${{matrix.build_type}}

    - name: Run
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ./run_benchmark
